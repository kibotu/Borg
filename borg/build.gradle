apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    namespace "net.kibotu.borg"
    compileSdk compileSdkVer
    buildToolsVersion = buildToolsVer

    defaultConfig {
        minSdk minSdkVer
        targetSdk targetSdkVer

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', '../proguard-debug.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', '../proguard-release.pro'
        }
    }

    // region java compile options

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // endregion

    // region kotlin compile options

    kotlinOptions {
        jvmTarget = "17"
        allWarningsAsErrors = false
        kotlinOptions.verbose = true
        freeCompilerArgs += [
                "-Xjvm-default=all-compatibility"
        ]
    }

    // endregion

    // region exclude duplicated meta inf files

    packagingOptions {
        // DebugProbesKt.bin is used for java debugging (not needed for android)
        // Hint: https://github.com/Kotlin/kotlinx.coroutines/issues/2274
        exclude 'DebugProbesKt.bin'

        excludes += '/META-INF/{AL2.0,LGPL2.1}'
        // https://stackoverflow.com/a/61893957/1006741
        excludes -= "/META-INF/*.kotlin_module"
    }

    // endregion
}

dependencies {
    coreLibraryDesugaring getLibrary("com.android.tools:desugar_jdk_libs")
    
    // Coroutines
    implementation getLibrary("org.jetbrains.kotlinx:kotlinx-coroutines-core")
    implementation getLibrary("org.jetbrains.kotlinx:kotlinx-coroutines-android")

    // Testing
    testImplementation getLibrary("org.jetbrains.kotlin:kotlin-test-junit")
    testImplementation getLibrary("org.jetbrains.kotlinx:kotlinx-coroutines-test")
    testImplementation getLibrary("junit:junit")
}

if (!isJitpack) {
    apply plugin: 'com.vanniktech.maven.publish'
    mavenPublishing {
        publishToMavenCentral(com.vanniktech.maven.publish.SonatypeHost.CENTRAL_PORTAL, true)
        signAllPublications()
    }
}

if (isJitpack) {
    apply plugin: 'maven-publish'
    afterEvaluate {
        publishing {
            publications {
                release(MavenPublication) {
                    from components.release
                    groupId = GROUP
                    artifactId = POM_ARTIFACT_ID
                    version = version
                }
            }
        }
    }
}
